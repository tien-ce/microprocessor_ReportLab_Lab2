/*
 * software_timer.c
 *
 *  Created on: Sep 14, 2024
 *      Author: thuyh
 */
#include "software_timer.h"
int timer1_counter = 0;
int timer1_flag = 0;
void setTimer1(int duration){
	timer1_counter=duration;
	timer1_flag = 0;
}
void timerRun(){
	if(timer1_counter >  0 ){
		timer1_counter--;
	}
	if(timer1_counter<=0){
		timer1_flag=1;
	}
}
const int MAX_LED = 4;
 int index_led = 0;
 int led_buffer [4] = {1 , 2 , 3 , 4};
 void update7SEG ( int index ) {
 switch ( index ) {
 case 0:
	 SET_EN_7_SEGMENT(GPIOA, EN1_Pin, EN2_Pin, EN3_Pin, EN4_Pin, 1);
	 DISPLAY_LED_7_SEGMENT(GPIOB, SEG0_Pin, SEG1_Pin, SEG2_Pin, SEG3_Pin, SEG4_Pin, SEG5_Pin, SEG6_Pin, led_buffer[0]);
 // Display the first 7 SEG with led_buffer [0]
 break ;
 case 1:
 // Display the second 7 SEG with led_buffer [1]
	 SET_EN_7_SEGMENT(GPIOA, EN1_Pin, EN2_Pin, EN3_Pin, EN4_Pin, 2);
	 DISPLAY_LED_7_SEGMENT(GPIOB, SEG0_Pin, SEG1_Pin, SEG2_Pin, SEG3_Pin, SEG4_Pin, SEG5_Pin, SEG6_Pin, led_buffer[1]);
 break ;
 case 2:
 // Display the third 7 SEG with led_buffer [2]
	 SET_EN_7_SEGMENT(GPIOA, EN1_Pin, EN2_Pin, EN3_Pin, EN4_Pin, 3);
	 DISPLAY_LED_7_SEGMENT(GPIOB, SEG0_Pin, SEG1_Pin, SEG2_Pin, SEG3_Pin, SEG4_Pin, SEG5_Pin, SEG6_Pin, led_buffer[2]);
 break ;
 case 3:
	 SET_EN_7_SEGMENT(GPIOA, EN1_Pin, EN2_Pin, EN3_Pin, EN4_Pin, 4);
	 DISPLAY_LED_7_SEGMENT(GPIOB, SEG0_Pin, SEG1_Pin, SEG2_Pin, SEG3_Pin, SEG4_Pin, SEG5_Pin, SEG6_Pin, led_buffer[3]);
 // Display the forth 7 SEG with led_buffer [3]
 break ;
 default :
 break ;
 }
 }
